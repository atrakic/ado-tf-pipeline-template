pool:
  vmImage: 'ubuntu-latest'

trigger: none

stages:
- stage: Terraform_plan
  displayName: 'Create terraform plan'
  variables:
  - template: variable_groups/terraform-sample-variables.yml
  - group: terraform-sample
  jobs:
    - job: CreatePlan
      steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: Install Terraform $(terraform-version)
        inputs:
          terraformVersion: $(terraform-version)
      - task: CmdLine@2
        displayName: Terraform Init
        inputs:
          script: terraform init -backend-config="access_key=$(access_key)" -backend-config="storage_account_name=$(storage_account_name)" -backend-config="container_name=$(container_name)" -backend-config="key=$(key)"
          workingDirectory: $(terafform-workdir)
      - task: CmdLine@2
        displayName: Terraform Validate
        inputs:
          script: terraform validate
          workingDirectory: $(terafform-workdir)
      - task: CmdLine@2
        displayName: Terraform Plan
        inputs:
          script: terraform plan -var-file=$(configuration-file-path) -input=false -out=tfplan -var="spn-client-id=$(spn_client_id)" -var="spn-client-secret=$(spn_client_secret)" -var="spn-tenant-id=$(spn_tenant_id)" -var="subscription-id=$(subscription_id)" 
          workingDirectory: $(terafform-workdir)
      - task: ArchiveFiles@2
        displayName: Archive Terraform Plan Files
        inputs:
          rootFolderOrFile: $(terafform-workdir)/tfplan
          archiveType: tar
          sevenZipCompression: 5
          archiveFile: $(Build.ArtifactStagingDirectory)/tfplan.tgz
      - task: PublishPipelineArtifact@1
        displayName: Publish Terraform Plan Artifact
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)/tfplan.tgz
          artifact: tfplan         
    - job: DeployPlan
      timeoutInMinutes: 120
      dependsOn: CreatePlan
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: tfplan       
      - task: ExtractFiles@1
        displayName: 'Extract files'
        inputs:
          archiveFilePatterns: $(Pipeline.Workspace)/tfplan.tgz
          destinationFolder: $(terafform-workdir)/plan
          cleanDestinationFolder: false     
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: Install Terraform $(terraform-version)
        inputs:
          terraformVersion: $(terraform-version)          
      - task: CmdLine@2
        displayName: Terraform Init
        inputs:
          script: terraform init -backend-config="access_key=$(access_key)" -backend-config="storage_account_name=$(storage_account_name)" -backend-config="container_name=$(container_name)" -backend-config="key=$(key)"
          workingDirectory: $(terafform-workdir)          
      - task: CmdLine@2
        displayName: Terraform Apply
        inputs:
          script: terraform apply -auto-approve -input=false plan/tfplan
          workingDirectory: $(terafform-workdir)
      - task: CmdLine@2
        inputs:
          script: terraform output -json > $(Build.ArtifactStagingDirectory)/terraform-output.json
          workingDirectory: $(terafform-workdir)
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: drop                
  